<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.LogDao">
  <resultMap id="BaseResultMap" type="org.example.entity.Log">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="api_method" jdbcType="VARCHAR" property="apiMethod" />
    <result column="request_url" jdbcType="VARCHAR" property="requestUrl" />
    <result column="request_method" jdbcType="VARCHAR" property="requestMethod" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="oper_ip" jdbcType="VARCHAR" property="operIp" />
    <result column="oper_status" jdbcType="INTEGER" property="operStatus" />
    <result column="error_msg" jdbcType="VARCHAR" property="errorMsg" />
    <result column="oper_time" jdbcType="TIMESTAMP" property="operTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, api_method, request_url, request_method, user_name, oper_ip, oper_status, 
    error_msg, oper_time
  </sql>
  <select id="selectByExample" parameterType="org.example.entity.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.example.entity.LogExample">
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.example.entity.Log">
    insert into log (log_id, api_method, request_url, 
      request_method, user_name, oper_ip, 
      oper_status, error_msg, oper_time
      )
    values (#{logId,jdbcType=INTEGER}, #{apiMethod,jdbcType=VARCHAR}, #{requestUrl,jdbcType=VARCHAR}, 
      #{requestMethod,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{operIp,jdbcType=VARCHAR}, 
      #{operStatus,jdbcType=INTEGER}, #{errorMsg,jdbcType=VARCHAR}, #{operTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.example.entity.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="apiMethod != null">
        api_method,
      </if>
      <if test="requestUrl != null">
        request_url,
      </if>
      <if test="requestMethod != null">
        request_method,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="operIp != null">
        oper_ip,
      </if>
      <if test="operStatus != null">
        oper_status,
      </if>
      <if test="errorMsg != null">
        error_msg,
      </if>
      <if test="operTime != null">
        oper_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="apiMethod != null">
        #{apiMethod,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null">
        #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null">
        #{requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="operIp != null">
        #{operIp,jdbcType=VARCHAR},
      </if>
      <if test="operStatus != null">
        #{operStatus,jdbcType=INTEGER},
      </if>
      <if test="errorMsg != null">
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="operTime != null">
        #{operTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.example.entity.LogExample" resultType="java.lang.Long">
    select count(*) from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log
    <set>
      <if test="row.logId != null">
        log_id = #{row.logId,jdbcType=INTEGER},
      </if>
      <if test="row.apiMethod != null">
        api_method = #{row.apiMethod,jdbcType=VARCHAR},
      </if>
      <if test="row.requestUrl != null">
        request_url = #{row.requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="row.requestMethod != null">
        request_method = #{row.requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="row.userName != null">
        user_name = #{row.userName,jdbcType=VARCHAR},
      </if>
      <if test="row.operIp != null">
        oper_ip = #{row.operIp,jdbcType=VARCHAR},
      </if>
      <if test="row.operStatus != null">
        oper_status = #{row.operStatus,jdbcType=INTEGER},
      </if>
      <if test="row.errorMsg != null">
        error_msg = #{row.errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="row.operTime != null">
        oper_time = #{row.operTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log
    set log_id = #{row.logId,jdbcType=INTEGER},
      api_method = #{row.apiMethod,jdbcType=VARCHAR},
      request_url = #{row.requestUrl,jdbcType=VARCHAR},
      request_method = #{row.requestMethod,jdbcType=VARCHAR},
      user_name = #{row.userName,jdbcType=VARCHAR},
      oper_ip = #{row.operIp,jdbcType=VARCHAR},
      oper_status = #{row.operStatus,jdbcType=INTEGER},
      error_msg = #{row.errorMsg,jdbcType=VARCHAR},
      oper_time = #{row.operTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.entity.Log">
    update log
    <set>
      <if test="apiMethod != null">
        api_method = #{apiMethod,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null">
        request_url = #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null">
        request_method = #{requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="operIp != null">
        oper_ip = #{operIp,jdbcType=VARCHAR},
      </if>
      <if test="operStatus != null">
        oper_status = #{operStatus,jdbcType=INTEGER},
      </if>
      <if test="errorMsg != null">
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="operTime != null">
        oper_time = #{operTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.entity.Log">
    update log
    set api_method = #{apiMethod,jdbcType=VARCHAR},
      request_url = #{requestUrl,jdbcType=VARCHAR},
      request_method = #{requestMethod,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      oper_ip = #{operIp,jdbcType=VARCHAR},
      oper_status = #{operStatus,jdbcType=INTEGER},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      oper_time = #{operTime,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>