<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.SystemFileDao">
  <resultMap id="BaseResultMap" type="org.example.entity.SystemFile">
    <id column="file_id" jdbcType="INTEGER" property="fileId" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="file_url" jdbcType="VARCHAR" property="fileUrl" />
    <result column="file_md5" jdbcType="VARCHAR" property="fileMd5" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="is_enable" jdbcType="BIT" property="isEnable" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    file_id, file_name, file_type, file_size, file_url, file_md5, is_delete, is_enable, 
    updated_time
  </sql>
  <select id="selectByExample" parameterType="org.example.entity.SystemFileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from system_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from system_file
    where file_id = #{fileId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from system_file
    where file_id = #{fileId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.example.entity.SystemFileExample">
    delete from system_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.example.entity.SystemFile">
    insert into system_file (file_id, file_name, file_type, 
      file_size, file_url, file_md5, 
      is_delete, is_enable, updated_time
      )
    values (#{fileId,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, 
      #{fileSize,jdbcType=BIGINT}, #{fileUrl,jdbcType=VARCHAR}, #{fileMd5,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=BIT}, #{isEnable,jdbcType=BIT}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.example.entity.SystemFile">
    insert into system_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        file_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileUrl != null">
        file_url,
      </if>
      <if test="fileMd5 != null">
        file_md5,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileMd5 != null">
        #{fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.example.entity.SystemFileExample" resultType="java.lang.Long">
    select count(*) from system_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update system_file
    <set>
      <if test="row.fileId != null">
        file_id = #{row.fileId,jdbcType=INTEGER},
      </if>
      <if test="row.fileName != null">
        file_name = #{row.fileName,jdbcType=VARCHAR},
      </if>
      <if test="row.fileType != null">
        file_type = #{row.fileType,jdbcType=VARCHAR},
      </if>
      <if test="row.fileSize != null">
        file_size = #{row.fileSize,jdbcType=BIGINT},
      </if>
      <if test="row.fileUrl != null">
        file_url = #{row.fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="row.fileMd5 != null">
        file_md5 = #{row.fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="row.isDelete != null">
        is_delete = #{row.isDelete,jdbcType=BIT},
      </if>
      <if test="row.isEnable != null">
        is_enable = #{row.isEnable,jdbcType=BIT},
      </if>
      <if test="row.updatedTime != null">
        updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update system_file
    set file_id = #{row.fileId,jdbcType=INTEGER},
      file_name = #{row.fileName,jdbcType=VARCHAR},
      file_type = #{row.fileType,jdbcType=VARCHAR},
      file_size = #{row.fileSize,jdbcType=BIGINT},
      file_url = #{row.fileUrl,jdbcType=VARCHAR},
      file_md5 = #{row.fileMd5,jdbcType=VARCHAR},
      is_delete = #{row.isDelete,jdbcType=BIT},
      is_enable = #{row.isEnable,jdbcType=BIT},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.entity.SystemFile">
    update system_file
    <set>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileUrl != null">
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileMd5 != null">
        file_md5 = #{fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where file_id = #{fileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.entity.SystemFile">
    update system_file
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=BIGINT},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      file_md5 = #{fileMd5,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      is_enable = #{isEnable,jdbcType=BIT},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where file_id = #{fileId,jdbcType=INTEGER}
  </update>
</mapper>