<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.SubstituteDao">
  <resultMap id="BaseResultMap" type="org.example.entity.Substitute">
    <id column="material_id" jdbcType="INTEGER" property="materialId" />
    <result column="organ_id" jdbcType="INTEGER" property="organId" />
    <result column="material_name" jdbcType="VARCHAR" property="materialName" />
    <result column="animal_id" jdbcType="VARCHAR" property="animalId" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.example.entity.Substitute">
    <result column="picture" jdbcType="LONGVARBINARY" property="picture" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    material_id, organ_id, material_name, animal_id, info, user_id, updated_time
  </sql>
  <sql id="Blob_Column_List">
    picture
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.example.entity.SubstituteExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from substitute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.example.entity.SubstituteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from substitute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from substitute
    where material_id = #{materialId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from substitute
    where material_id = #{materialId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.example.entity.SubstituteExample">
    delete from substitute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.example.entity.Substitute">
    insert into substitute (material_id, organ_id, material_name, 
      animal_id, info, user_id, 
      updated_time, picture)
    values (#{materialId,jdbcType=INTEGER}, #{organId,jdbcType=INTEGER}, #{materialName,jdbcType=VARCHAR}, 
      #{animalId,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{picture,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="org.example.entity.Substitute">
    insert into substitute
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="materialId != null">
        material_id,
      </if>
      <if test="organId != null">
        organ_id,
      </if>
      <if test="materialName != null">
        material_name,
      </if>
      <if test="animalId != null">
        animal_id,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="picture != null">
        picture,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="materialId != null">
        #{materialId,jdbcType=INTEGER},
      </if>
      <if test="organId != null">
        #{organId,jdbcType=INTEGER},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="animalId != null">
        #{animalId,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.example.entity.SubstituteExample" resultType="java.lang.Long">
    select count(*) from substitute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update substitute
    <set>
      <if test="row.materialId != null">
        material_id = #{row.materialId,jdbcType=INTEGER},
      </if>
      <if test="row.organId != null">
        organ_id = #{row.organId,jdbcType=INTEGER},
      </if>
      <if test="row.materialName != null">
        material_name = #{row.materialName,jdbcType=VARCHAR},
      </if>
      <if test="row.animalId != null">
        animal_id = #{row.animalId,jdbcType=VARCHAR},
      </if>
      <if test="row.info != null">
        info = #{row.info,jdbcType=VARCHAR},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=INTEGER},
      </if>
      <if test="row.updatedTime != null">
        updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.picture != null">
        picture = #{row.picture,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update substitute
    set material_id = #{row.materialId,jdbcType=INTEGER},
      organ_id = #{row.organId,jdbcType=INTEGER},
      material_name = #{row.materialName,jdbcType=VARCHAR},
      animal_id = #{row.animalId,jdbcType=VARCHAR},
      info = #{row.info,jdbcType=VARCHAR},
      user_id = #{row.userId,jdbcType=INTEGER},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      picture = #{row.picture,jdbcType=LONGVARBINARY}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update substitute
    set material_id = #{row.materialId,jdbcType=INTEGER},
      organ_id = #{row.organId,jdbcType=INTEGER},
      material_name = #{row.materialName,jdbcType=VARCHAR},
      animal_id = #{row.animalId,jdbcType=VARCHAR},
      info = #{row.info,jdbcType=VARCHAR},
      user_id = #{row.userId,jdbcType=INTEGER},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.entity.Substitute">
    update substitute
    <set>
      <if test="organId != null">
        organ_id = #{organId,jdbcType=INTEGER},
      </if>
      <if test="materialName != null">
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="animalId != null">
        animal_id = #{animalId,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where material_id = #{materialId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.example.entity.Substitute">
    update substitute
    set organ_id = #{organId,jdbcType=INTEGER},
      material_name = #{materialName,jdbcType=VARCHAR},
      animal_id = #{animalId,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      picture = #{picture,jdbcType=LONGVARBINARY}
    where material_id = #{materialId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.entity.Substitute">
    update substitute
    set organ_id = #{organId,jdbcType=INTEGER},
      material_name = #{materialName,jdbcType=VARCHAR},
      animal_id = #{animalId,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where material_id = #{materialId,jdbcType=INTEGER}
  </update>
</mapper>