<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.DynamicParameterDao">
  <resultMap id="BaseResultMap" type="org.example.entity.DynamicParameter">
    <id column="param_id" jdbcType="INTEGER" property="paramId" />
    <result column="material_name" jdbcType="VARCHAR" property="materialName" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="comment_notes" jdbcType="VARCHAR" property="commentNotes" />
    <result column="exp_name" jdbcType="VARCHAR" property="expName" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="category" jdbcType="BIT" property="category" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.example.entity.DynamicParameter">
    <result column="param_data" jdbcType="LONGVARCHAR" property="paramData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    param_id, material_name, info, comment_notes, exp_name, updated_time, username, category
  </sql>
  <sql id="Blob_Column_List">
    param_data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.example.entity.DynamicParameterExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dynamic_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.example.entity.DynamicParameterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dynamic_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dynamic_param
    where param_id = #{paramId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dynamic_param
    where param_id = #{paramId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.example.entity.DynamicParameterExample">
    delete from dynamic_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.example.entity.DynamicParameter">
    insert into dynamic_param (param_id, material_name, info, 
      comment_notes, exp_name, updated_time, 
      username, category, param_data
      )
    values (#{paramId,jdbcType=INTEGER}, #{materialName,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, 
      #{commentNotes,jdbcType=VARCHAR}, #{expName,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{username,jdbcType=VARCHAR}, #{category,jdbcType=BIT}, #{paramData,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.example.entity.DynamicParameter">
    insert into dynamic_param
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paramId != null">
        param_id,
      </if>
      <if test="materialName != null">
        material_name,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="commentNotes != null">
        comment_notes,
      </if>
      <if test="expName != null">
        exp_name,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="paramData != null">
        param_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paramId != null">
        #{paramId,jdbcType=INTEGER},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="commentNotes != null">
        #{commentNotes,jdbcType=VARCHAR},
      </if>
      <if test="expName != null">
        #{expName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=BIT},
      </if>
      <if test="paramData != null">
        #{paramData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.example.entity.DynamicParameterExample" resultType="java.lang.Long">
    select count(*) from dynamic_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dynamic_param
    <set>
      <if test="row.paramId != null">
        param_id = #{row.paramId,jdbcType=INTEGER},
      </if>
      <if test="row.materialName != null">
        material_name = #{row.materialName,jdbcType=VARCHAR},
      </if>
      <if test="row.info != null">
        info = #{row.info,jdbcType=VARCHAR},
      </if>
      <if test="row.commentNotes != null">
        comment_notes = #{row.commentNotes,jdbcType=VARCHAR},
      </if>
      <if test="row.expName != null">
        exp_name = #{row.expName,jdbcType=VARCHAR},
      </if>
      <if test="row.updatedTime != null">
        updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.username != null">
        username = #{row.username,jdbcType=VARCHAR},
      </if>
      <if test="row.category != null">
        category = #{row.category,jdbcType=BIT},
      </if>
      <if test="row.paramData != null">
        param_data = #{row.paramData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dynamic_param
    set param_id = #{row.paramId,jdbcType=INTEGER},
      material_name = #{row.materialName,jdbcType=VARCHAR},
      info = #{row.info,jdbcType=VARCHAR},
      comment_notes = #{row.commentNotes,jdbcType=VARCHAR},
      exp_name = #{row.expName,jdbcType=VARCHAR},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      username = #{row.username,jdbcType=VARCHAR},
      category = #{row.category,jdbcType=BIT},
      param_data = #{row.paramData,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dynamic_param
    set param_id = #{row.paramId,jdbcType=INTEGER},
      material_name = #{row.materialName,jdbcType=VARCHAR},
      info = #{row.info,jdbcType=VARCHAR},
      comment_notes = #{row.commentNotes,jdbcType=VARCHAR},
      exp_name = #{row.expName,jdbcType=VARCHAR},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      username = #{row.username,jdbcType=VARCHAR},
      category = #{row.category,jdbcType=BIT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.entity.DynamicParameter">
    update dynamic_param
    <set>
      <if test="materialName != null">
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="commentNotes != null">
        comment_notes = #{commentNotes,jdbcType=VARCHAR},
      </if>
      <if test="expName != null">
        exp_name = #{expName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=BIT},
      </if>
      <if test="paramData != null">
        param_data = #{paramData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where param_id = #{paramId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.example.entity.DynamicParameter">
    update dynamic_param
    set material_name = #{materialName,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      comment_notes = #{commentNotes,jdbcType=VARCHAR},
      exp_name = #{expName,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      username = #{username,jdbcType=VARCHAR},
      category = #{category,jdbcType=BIT},
      param_data = #{paramData,jdbcType=LONGVARCHAR}
    where param_id = #{paramId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.entity.DynamicParameter">
    update dynamic_param
    set material_name = #{materialName,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      comment_notes = #{commentNotes,jdbcType=VARCHAR},
      exp_name = #{expName,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      username = #{username,jdbcType=VARCHAR},
      category = #{category,jdbcType=BIT}
    where param_id = #{paramId,jdbcType=INTEGER}
  </update>
</mapper>